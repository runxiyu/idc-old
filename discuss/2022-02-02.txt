[02:06:59] <Andrew> mornin
[02:12:02] <Andrew> .t est
[02:12:02] -lurk- 4Error running command! URLError: <urlopen error EOF occurred in violation of protocol (_ssl.c:1131)>
[02:12:12] <Andrew> .t est
[02:12:17] -lurk- 4Error running command! HTTPError: HTTP Error 404: Not Found
[02:12:24] <Andrew> .t est
[02:12:28] <Andrew> wait, what?
[02:12:30] <Andrew> luk3yx: 404
[02:12:31] -lurk- 4Error running command! HTTPError: HTTP Error 404: Not Found
[02:12:50] <Andrew> .weather Shanghai
[02:12:50] -lurk- 4Error running command! URLError: <urlopen error EOF occurred in violation of protocol (_ssl.c:1131)>
[02:12:53] <Andrew> .weather Shanghai
[02:12:58] -lurk- 4Error running command! URLError: <urlopen error _ssl.c:1114: The handshake operation timed out>
[02:13:02] <Andrew> lurk is getting kinda annoying, lol
[02:13:07] <Andrew> !list
[02:13:07] <LibreBot> Andrew: Admin, Aka, AutoMode, Autocomplete, BadWords, ChanTracker, Channel, ChannelLogger, ChannelStats, Conditional, Config, Ctcp, DDG, Debug, Dict, Filter, Format, Lart, Later, Limiter, Math, MessageParser, Misc, MoobotFactoids, Network, News, NickAuth, Nickometer, Note, Owner, Plugin, PluginDownloader, Poll, Protector, QuoteGrabs, RelayNext, Reply, Scheduler, Seen, Services, Sigyn, Status, String, Success, Time, Todo, Topic,  (1 more message)
[02:13:10] <Andrew> !list time
[02:13:10] <LibreBot> Andrew: at, ctime, ddate, elapsed, seconds, time, tztime, and until
[02:13:15] <Andrew> !tztime est
[02:13:15] <LibreBot> Andrew: Error: Unknown timezone
[02:13:23] <Andrew> !tztime America/Chicago
[02:13:23] <LibreBot> Andrew: 2022-04-01T19:13:23-0500
[02:13:30] <Andrew> hax: what's the EST timezone again?
[02:13:41] <Andrew> !tztime Asia/Shanghai
[02:13:41] <LibreBot> Andrew: 2022-04-02T08:13:41+0800
[02:16:12] <luk3yx> Andrew: I have no idea why it 404s
[02:16:20] <luk3yx> But it does
[02:16:24] <Andrew> maybe the .py got removed?
[02:16:24] <luk3yx> .t
[02:16:29] -lurk- 4Error running command! URLError: <urlopen error _ssl.c:1114: The handshake operation timed out>
[02:16:31] <Andrew> !help tztime
[02:16:31] <LibreBot> Andrew: (tztime <region>/<city> (or <region>/<state>/<city>)) -- Takes a city and its region, and returns its local time. This command uses the IANA Time Zone Database.
[02:16:33] <luk3yx> It doesn't use .py, it uses replit
[02:16:50] <Andrew> Well, the interface for such is .py, right?
[02:16:52] <Andrew> .py ""
[02:16:58] -lurk- 4Error running command! timeout: The read operation timed out
[02:17:10] <Andrew> The Sopel lurk uses ... ?
[02:17:15] <luk3yx> It's similar to that but I had to sign up and write code to add that interface
[02:17:17] <luk3yx> .py ""
[02:17:17] <lurk> luk3yx: (no output)
[02:17:20] <luk3yx> .t
[02:17:30] -lurk- 4Error running command! timeout: The read operation timed out
[02:17:38] <Andrew> Complicated
[02:17:46] <luk3yx> It says "repl waking up..." if I open it in my web browser
[02:17:53] <Andrew> .py "\x1b(0"
[02:17:53] <lurk> Andrew: (0
[02:17:57] <luk3yx> It woke up
[02:17:59] <luk3yx> .t
[02:18:04] -lurk- 4Error running command! URLError: <urlopen error _ssl.c:1114: The handshake operation timed out>
[02:18:05] <luk3yx> But for some reason not for lurk
[02:18:12] <luk3yx> It woke up for me though
[02:18:15] <Andrew> hmm
[02:18:26] *** Andrew sets mode: +e LibreIRC?*!*@*
[02:18:28] <luk3yx> .t
[02:18:28] -lurk- 4Error running command! URLError: <urlopen error EOF occurred in violation of protocol (_ssl.c:1131)>
[02:18:35] *** Andrew sets mode: +e *!*@LibreIRC/*
[02:18:47] *** Andrew sets mode: -e LibreIRC?!*@*
[02:18:50] *** Andrew sets mode: -e LibreIRC?*!*@*
[02:19:32] *** Joins: Guard (andrew@andrewyu.org)
[02:19:32] *** ChanServ sets mode: +o Guard
[02:19:40] <Andrew> hax: It's here to annoy you again
[02:19:52] <Andrew> But you can do better things than killing or kicking them
[02:19:55] <Andrew> lol
[02:21:42] <luk3yx> -coup
[02:21:46] <luk3yx> -spam #libreirc 1 1
[02:21:46] *** Joins: SpamServ (SpamServ@hax/SpamServ)
[02:21:46] <SpamServ> 1
[02:21:46] *** Parts: SpamServ (SpamServ@hax/SpamServ) ()
[02:21:49] <luk3yx> -spam #libreirc 1 Hi
[02:21:54] <luk3yx> -spam #libreirc Hi 1
[02:21:54] *** Quits: Test_User (CoupServ@hax/CoupServ) (irc.andrewyu.org coup.irc.andrewyu.org)
[02:22:01] <Andrew> lol
[02:22:02] *** Joins: Test_User (CoupServ@hax/CoupServ)
[02:22:02] *** coup.irc.andrewyu.org sets mode: +ov Test_User Test_User
[02:22:06] <Andrew> -coup #libreirc 
[02:22:06] *** Test_User sets mode: -oooo Guard lurk ChanServ werdnA
[02:22:06] *** Parts: ChanServ (ChanServ@services.irc.andrewyu.org) ()
[02:22:06] *** Joins: ChanServ (ChanServ@services.irc.andrewyu.org)
[02:22:06] *** services.irc.andrewyu.org sets mode: +o ChanServ
[02:22:06] *** Test_User sets mode: -ooo LibreBot Hawk James
[02:22:12] *** Andrew sets mode: +oooo lurk werdnA LibreBot Hawk
[02:22:15] *** Andrew sets mode: +oo James Guard
[02:22:31] <luk3yx> -coup #libreirc
[02:22:31] *** Test_User sets mode: -o ChanServ
[02:22:31] *** Parts: ChanServ (ChanServ@services.irc.andrewyu.org) ()
[02:22:31] *** Joins: ChanServ (ChanServ@services.irc.andrewyu.org)
[02:22:31] *** services.irc.andrewyu.org sets mode: +o ChanServ
[02:22:47] *** ChanServ changes topic to 'LibreIRC Network Channel | Staff: Andrew, hax, luk3yx | <prefix>Bots [(Owner)]: !LibreBot (Andrew), ?Guard (Andrew), .lurk (luk3yx), -CoupServ (hax), ChanServ | \x1b(0 | https://git.andrewyu.org/ircbots/file/ts6.py.html has SigServ, an upcoming anti-spam bot'
[02:22:48] <luk3yx> Does Test_User make it leave or does ChanServ leave of its own accord?
[02:22:55] <luk3yx> -coup #services
[02:22:55] <Andrew> What did you last say?
[02:22:57] <Andrew> I /c'ed
[02:23:03] <luk3yx> -coup #libreirc 
[02:23:03] *** Test_User sets mode: -o ChanServ
[02:23:03] *** Parts: ChanServ (ChanServ@services.irc.andrewyu.org) ()
[02:23:03] *** Joins: ChanServ (ChanServ@services.irc.andrewyu.org)
[02:23:03] *** services.irc.andrewyu.org sets mode: +o ChanServ
[02:23:06] <luk3yx> Does Test_User make it leave or does ChanServ leave of its own accord? 
[02:23:12] <luk3yx> -coup #services 
[02:23:23] <luk3yx> -coup #discard
[03:17:58] <Andrew> luk3yx: chanserv rejoins to gain ops
[03:18:33] <luk3yx> -spam #libreirc 1 .t
[03:18:34] *** Joins: SpamServ (SpamServ@hax/SpamServ)
[03:18:34] <SpamServ> .t
[03:18:34] *** Parts: SpamServ (SpamServ@hax/SpamServ) ()
[03:18:39] -lurk- 4Error running command! timeout: The read operation timed out
[03:18:42] <luk3yx> Useless
[03:18:47] <luk3yx> -spam #libreirc 100 .t
[03:18:48] *** Joins: SpamServ (SpamServ@hax/SpamServ)
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] <SpamServ> .t
[03:18:48] *** Parts: SpamServ (SpamServ@hax/SpamServ) ()
[03:18:53] -lurk- 4Error running command! timeout: The read operation timed out
[03:18:53] -lurk- 4Error running command! timeout: The read operation timed out
[03:18:53] -lurk- 4Error running command! timeout: The read operation timed out
[03:18:53] -lurk- 4Error running command! timeout: The read operation timed out
[03:18:53] -lurk- 4Error running command! timeout: The read operation timed out
[03:18:53] *** Quits: lurk (lurk@144.172.70.127) (Excess Flood)
[03:19:11] *** Joins: lurk (lurk@144.172.70.127)
[03:19:11] <lurk> SpamServ: 2022-04-02 01:19:01 UTC
[03:19:11] <lurk> SpamServ: 2022-04-02 01:19:01 UTC
[03:19:11] <lurk> SpamServ: 2022-04-02 01:19:01 UTC
[03:19:11] <lurk> SpamServ: 2022-04-02 01:19:02 UTC
[03:19:11] <lurk> SpamServ: 2022-04-02 01:19:02 UTC
[03:19:11] *** ChanServ sets mode: +o lurk
[03:19:22] <luk3yx> .t
[03:19:22] <lurk> luk3yx: 2022-04-02 01:19:22 UTC
[03:19:27] <luk3yx> Well that worked
[03:30:56] <hax> luk3yx: ChanServ leaves when it's deop'd
[03:31:07] <hax> -mode #LibreIRC -o ChanServ 
[03:31:07] *** coup.irc.andrewyu.org sets mode: -o ChanServ
[03:31:07] *** Parts: ChanServ (ChanServ@services.irc.andrewyu.org) ()
[03:31:07] *** Joins: ChanServ (ChanServ@services.irc.andrewyu.org)
[03:31:07] *** services.irc.andrewyu.org sets mode: +o ChanServ
[03:44:36] <Andrew> -spam #libreirc 50 you are a scammer
[03:44:36] *** Joins: SpamServ (SpamServ@hax/SpamServ)
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] <SpamServ> you are a scammer
[03:44:36] *** Parts: SpamServ (SpamServ@hax/SpamServ) ()
[03:55:07] *** Quits: Test_User (CoupServ@hax/CoupServ) (irc.andrewyu.org coup.irc.andrewyu.org)
[03:55:15] *** Joins: Test_User (CoupServ@hax/CoupServ)
[03:55:15] *** coup.irc.andrewyu.org sets mode: +ov Test_User Test_User
[04:04:34] <Andrew> cyan sus
[04:04:39] <Andrew> luk3yx: you are cyan
[04:04:48] <luk3yx> You are green
[04:18:38] <Andrew> luk3yx: I think I'm lime
[04:18:51] <Andrew> hax: Note that the nick "Impostor" is cyan
[04:18:56] <Andrew> -sanick lurk Impostor
[04:18:56] *** lurk is now known as Impostor
[04:18:59] <Andrew> well
[04:19:03] <Andrew> maybe it's magenta
[04:19:13] <Andrew> or as amogus people call it, 'pink' or 'coral'
[04:56:16] * Andrew was The Impostor.
[04:56:23] <Andrew> 65535 Impostors remain.
[04:56:35] <Andrew> Totally not a integer underflow
[04:56:49] <Andrew> hax: Have you looked in alternative version control systems?
[04:56:55] <Andrew> And luk3yx ^
[05:03:48] <hax> yeah I call it leave a file on my drive and hope for the best :P
[05:13:42] <Andrew> hax: No, I'm talking about VC
[05:13:45] <Andrew> not backup
[05:26:04] <Andrew> hax: Backups are necessary
[05:26:07] <Andrew> But VC is different
[06:40:13] <Andrew> luk3yx: Are you sus?
[06:49:59] <luk3yx> No
[06:50:22] <luk3yx> -sanick lurk test@test2
[06:50:35] <luk3yx> -sanick Impostor test/test2
[06:50:39] <luk3yx> .r
[06:50:39] <Impostor> luk3yx: Click!
[06:50:42] <luk3yx> -sanick Impostor aaa
[06:50:42] *** Impostor is now known as aaa
[06:50:48] <luk3yx> -sanick aaa test!test
[06:50:51] <luk3yx> -sanick aaa test@test
[06:50:57] <luk3yx> -sanick aaa ™
[06:51:02] <luk3yx> -sanick aaa lurk
[06:51:02] *** aaa is now known as lurk
[06:51:15] <luk3yx> -sanick Andrew Impostor
[06:51:15] *** Andrew is now known as Impostor
[06:56:51] *** Impostor is now known as Andrew
[06:57:01] <Andrew> luk3yx: I'm totally not selling all my data to Google
[06:57:08] <Andrew> (The last sentence was serious)
[06:57:19] <Andrew> i.e. Totally isn't being used ironically 
[06:57:21] <Andrew> lol
[06:57:24] <luk3yx> I don't sell it either ~~I give it away for free~~
[06:57:43] <luk3yx> Well I guess I "sell" it in return for Gmail/Google Photos/etc
[06:58:13] <Andrew> Yup
[06:58:29] <Andrew> luk3yx: Ever heard of the Twisted Matrix framework?
[06:59:01] <Andrew> -sanick hax Crewmate
[06:59:01] *** hax is now known as Crewmate
[06:59:05] <Andrew> Crewmate is blue
[06:59:08] <Andrew> So is hax
[06:59:13] <Andrew> But it's supposed to be cyan
[06:59:54] <luk3yx> Andrew: I've heard of Twisted (though I haven't used it) and I use Matrix
[07:00:01] <Andrew> lol
[07:09:14] <Andrew> luk3yx and hax: What do you think of when I say "I'm coding"?
[08:06:05] <luk3yx> Andrew: That you're writing code?
[08:06:32] <Andrew> <Doctor> Code blue, start ACLS
[08:07:07] <Andrew> luk3yx: "Coding" can mean i.e. no vitals
[08:12:40] <Andrew> Hax and luk3yx: Should I use MIME types in IDC?
[08:13:03] <Andrew> and I'm going to make the encoding a thing in CAPAB
[08:23:16] <luk3yx> Andrew: For what? File uploads? Sure, I think HTTP uses it
[08:24:08] <Andrew> luk3yx: Everything
[08:24:16] <Andrew> For example, messages are usually text/plain
[08:24:31] <Andrew> Images are'nt 'file uploads', they're just messages with a type image/lukimagee or something
[08:25:09] <luk3yx> Interesting
[08:25:23] <luk3yx> But how would you tell whether a message is supposed to be an uploaded text file or a regular message
[08:25:34] <luk3yx> I guess you could have a separate flag for that
[08:25:35] <Andrew> luk3yx: why would you need to know that?
[08:25:45] <luk3yx> Which would also let you toggle images between inline and download-only
[08:26:01] <Andrew> I don't get the point of this differentiation
[08:26:06] <luk3yx> Andrew: So you know whether to show it as a message or as an uploaded file
[08:26:22] <Andrew> I also don't get the point of this differentiation
[08:26:39] <Andrew> Text is text, messages are files, files are messages
[08:26:51] <Andrew> New specs:
[08:27:06] <Andrew> Clients SHOULD provide the option to save any message as a file
[08:27:13] <Andrew> luk3yx: Oh, maybe they want filenames?
[08:28:02] <Andrew> * Crewmate 
[08:28:08] <Andrew> also, my znc is not responding
[08:28:24] <luk3yx> Not responding?
[08:28:39] <Andrew> ok, reconnecting fixes
[08:29:45] <Andrew> .add_quote <Karl Marx> Class conflict is inevitable in object-oriented programming.
[08:29:45] <lurk> Andrew: Permission denied!
[08:29:50] * Andrew is sad
[08:30:04] <luk3yx> .qotd
[08:30:05] <lurk> Quote of the day: <Uncler4> maybe it's time to let qotd go into retirement  Disclaimer: Quotes are mostly user-generated content and may not be endorsed by lurklite staff.
[08:30:18] <luk3yx> .t
[08:30:23] -lurk- 4Error running command! timeout: The read operation timed out
[08:30:37] <luk3yx> .t
[08:30:42] -lurk- 4Error running command! timeout: The read operation timed out
[08:30:50] <Andrew> .add_quote <Test_User> because yes
[08:30:50] <lurk> Andrew: Permission denied!
[08:31:02] <Andrew> ?quiet lurk 300 Staff disrespect
[08:31:06] <Andrew> "Permission denied"
[08:31:09] <Andrew> what?
[08:31:14] <Andrew> dude
[08:31:21] *** Guard was kicked by Andrew (Staff disrespect)
[08:31:22] <luk3yx> ?quiet lurk 1 Test
[08:31:27] <Andrew> well
[08:31:28] *** Andrew was kicked by luk3yx (Bot disrespect)
[08:31:38] *** Joins: Andrew (Andrew@LibreIRC/staff/Andrew)
[08:31:38] *** ChanServ sets mode: +o Andrew
[08:31:38] *** Server sets mode: +CMPnt 
[08:31:49] <luk3yx> -sajoin Guard #libreirc
[08:31:55] <Andrew> no sajoin
[08:32:01] <luk3yx> -join #libreirc
[08:32:08] <Andrew> -:1HC ENCAP * KLINE 1 *!*@* yey
[08:32:11] <Andrew> err
[08:32:22] <luk3yx> -coup #libreirc
[08:32:22] *** Test_User sets mode: -ooo ChanServ lurk werdnA
[08:32:22] *** Parts: ChanServ (ChanServ@services.irc.andrewyu.org) ()
[08:32:22] *** Joins: ChanServ (ChanServ@services.irc.andrewyu.org)
[08:32:22] *** services.irc.andrewyu.org sets mode: +o ChanServ
[08:32:22] <Andrew> Crewmate: also, make Test_User log usages to #services and snomasks
[08:32:22] *** Test_User sets mode: -ooo LibreBot Hawk James
[08:32:30] <Andrew> -spam luk3yx 10 luk3yx
[08:32:41] *** Andrew was kicked by luk3yx (Staff disrespect)
[08:32:51] *** Joins: Andrew (Andrew@LibreIRC/staff/Andrew)
[08:32:51] *** ChanServ sets mode: +o Andrew
[08:32:51] *** Server sets mode: +CMPnt 
[08:32:58] *** Andrew sets mode: +oooo lurk werdnA LibreBot Hawk
[08:33:00] *** Andrew sets mode: +o James
[08:33:15] <luk3yx> .t
[08:33:16] <lurk> luk3yx: 2022-04-02 06:33:16 UTC
[08:33:18] <luk3yx> Yay
[08:33:18] <lurk> ​Yay!
[08:33:20] <luk3yx> .t
[08:33:21] <lurk> luk3yx: 2022-04-02 06:33:21 UTC
[08:33:26] *** Quits: Andrew (Andrew@LibreIRC/staff/Andrew) (K-Lined)
[08:33:50] *** Joins: Andrew (Andrew@LibreIRC/staff/Andrew)
[08:33:50] *** ChanServ sets mode: +o Andrew
[08:33:54] *** Server sets mode: +CMPnt 
[08:33:57] <luk3yx> Andrew: Nice quit message, you tricked me for a second
[08:33:57] <Andrew> totally got K-lined
[08:34:02] <Andrew> lol
[08:34:15] *** Server sets mode: +CMPnt 
[08:40:42] <luk3yx> .qotd-status
[08:40:42] <lurk> luk3yx: Permission denied!
[08:40:54] <luk3yx> ?quiet lurk 86400 Staff disrespect
[08:41:03] <luk3yx> -coup lurk
[08:41:03] <Andrew> I kicked guard
[08:41:03] *** Quits: Test_User (CoupServ@hax/CoupServ) (irc.andrewyu.org coup.irc.andrewyu.org)
[08:41:13] *** Joins: Test_User (CoupServ@hax/CoupServ)
[08:41:13] *** coup.irc.andrewyu.org sets mode: +ov Test_User Test_User
[08:41:18] * Andrew thinks Crewmate is trying to do something sus
[08:41:23] <Andrew> Oh, it's just a protocol violation
[08:41:33] <Andrew> * CoupServ crashed
[08:42:48] <luk3yx> -msg #LibreIRC Yay
[08:42:51] <luk3yx> -echo Yay
[08:42:51] <Test_User> Yay
[08:42:51] <lurk> ​Yay!
[08:42:56] <luk3yx> -echo -echo Yay
[08:42:56] <Test_User> -echo Yay
[08:43:05] <luk3yx> -echo !fflags lurk -*
[08:43:05] <Test_User> !fflags lurk -*
[08:43:05] <LibreBot> Test_User: Error: "fflags" is not a valid command.
[08:43:15] <luk3yx> -spam luk3yx 1 Hi
[08:43:36] <Andrew> -spam Crewmate 100 You're not a crewmate, you're An Impostor.
[08:44:03] <luk3yx> -spam OperServ 1 rehash
[08:44:29] <luk3yx> -spam NickServ 1 register hunter2 spamserv@andrewyu.org
[08:44:31] <Andrew> luk3yx: I'll start running Convos
[08:44:40] <Andrew> luk3yx: kPeople say it's a Discord frontend for IDC
[08:44:41] <Andrew> *IRC
[08:45:13] -ChanServ- luk3yx added test_user!*@* to the AKICK list.
[08:45:13] *** ChanServ sets mode: -ooo werdnA Hawk James
[08:45:17] -ChanServ- luk3yx removed test_user!*@* from the AKICK list.
[08:45:23] <Andrew> luk3yx: don't
[08:45:31] *** luk3yx sets mode: +ooo werdnA Hawk James
[08:46:06] *** luk3yx sets mode: +vvvv luk3yx werdnA LibreBot Hawk
[08:46:08] *** luk3yx sets mode: +vvvv James Crewmate lurk ChanServ
[08:46:10] *** luk3yx sets mode: -vvvv luk3yx werdnA LibreBot Hawk
[08:46:12] *** luk3yx sets mode: +v Andrew
[08:46:14] *** luk3yx sets mode: -vvvv James Crewmate lurk ChanServ
[08:46:16] *** luk3yx sets mode: -v Test_User
[08:46:16] *** Test_User sets mode: +v Test_User
[08:46:18] <luk3yx> You can do `/voice * -yes` or /voice *pattern*
[08:46:27] *** luk3yx sets mode: -v Test_User
[08:46:27] *** Test_User sets mode: +v Test_User
[08:46:33] *** luk3yx sets mode: -v Test_User
[08:46:33] *** Test_User sets mode: +v Test_User
[08:46:35] *** luk3yx sets mode: -v Test_User
[08:46:35] *** Test_User sets mode: +v Test_User
[08:46:37] *** luk3yx sets mode: -v Test_User
[08:46:37] *** Test_User sets mode: +v Test_User
[08:46:56] <luk3yx> -span MemoServ 1 send luk3yx Hi
[08:46:57] <Andrew> andrewyu.org:3081
[08:47:00] <luk3yx> -spam MemoServ 1 send luk3yx Hi
[08:47:02] <Andrew> setting up tls rn
[08:47:21] <luk3yx> Am I supposed to connect
[08:47:27] <Andrew> not rn
[08:47:30] <luk3yx> Okay
[08:47:58] <luk3yx> -spam MemoServ 1 send luk3yx Hi
[08:48:33] <luk3yx> -spam nickserv 1 set enforce on
[08:48:36] <luk3yx> -spam nickserv 1 set enforcetime 1
[08:48:37] * Andrew runs certbot for "convos.andrewyu.org"
[08:48:47] <luk3yx> -spam nickserv 1 logout
[08:49:02] <luk3yx> It didn't SANICK it
[08:49:07] <luk3yx> -coup nickserv
[08:49:07] *** Quits: Test_User (CoupServ@hax/CoupServ) (irc.andrewyu.org coup.irc.andrewyu.org)
[08:49:14] *** Joins: Test_User (CoupServ@hax/CoupServ)
[08:49:14] *** coup.irc.andrewyu.org sets mode: +ov Test_User Test_User
[08:49:22] <Andrew> luk3yx: https://convos.andrewyu.org
[08:49:33] <luk3yx> -spam nickserv identify spamserv hunter2
[08:49:33] *** Quits: Test_User (CoupServ@hax/CoupServ) (irc.andrewyu.org coup.irc.andrewyu.org)
[08:49:41] *** Joins: Test_User (CoupServ@hax/CoupServ)
[08:49:41] *** coup.irc.andrewyu.org sets mode: +ov Test_User Test_User
[08:49:54] <luk3yx> > Firefox can’t establish a connection to the server at ws://localhost:3081/events.
[08:49:55] <Andrew> luk3yx: number needed
[08:50:01] <luk3yx> -spam nickserv 1 identify spamserv hunter2
[08:50:03] <Andrew> websocket, ahhh
[08:51:01] <luk3yx> Anyway is there some way to set the address it tries to connect to
[08:52:18] <Andrew> luk3yx: try again
[08:52:20] <Andrew> I think there is
[08:53:33] <luk3yx> > Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at https://localhost:3081/api/i18n/en.json. (Reason: CORS request did not succeed). Status code: (null).
[08:53:48] <Andrew> localhost idiots
[08:54:15] <Andrew> so complicated
[08:54:19] <Andrew> luk3yx: you can also host your own as a test
[08:54:31] <Andrew> I still don't have a normal web-wowser rn
[08:55:04] <Andrew> Loading user data failed: could nor connect
[08:55:09] <luk3yx> Where is it
[08:55:34] <Andrew> https://convos.andrewyu.org ?
[08:55:34] <luk3yx> Your Convos instance
[08:55:42] <Andrew> it's on andrewyu.org
[08:55:48] <luk3yx> I mean where can I tweak the config
[08:55:58] <luk3yx> If you're okay with me tweaking the config
[08:57:00] <Andrew> sure
[08:57:02] <Andrew> ugh
[08:57:04] <Andrew> there's no config
[08:57:08] <Andrew> join convos's tmux
[08:57:30] <Andrew> i see you
[08:57:41] <Andrew> ...
[08:57:48] <Andrew> use printf instead
[08:58:00] <Andrew> luk3yx: use printf, not echo -e
[08:58:20] <Andrew> luk3yx: also, the password for the account is just 'convos'
[08:58:24] <Andrew> except that I used passwd -l on it
[08:58:58] <luk3yx> > wss://convos.andrewyu.org/events
[08:59:04] <luk3yx> Now it's 404ing
[08:59:04] <Andrew> ?
[09:01:37] <luk3yx> Yay
[09:01:37] <lurk> ​Yay!
[09:01:40] <luk3yx> Andrew: I get a sign up page
[09:01:50] <luk3yx> > As you are the first user, you do not need any invitation link. Just fill in the form below, hit "Sign up" to start chatting.
[09:01:57] <Andrew> ugggh
[09:02:00] <Andrew> No
[09:02:14] <Andrew> I need to be the first user
[09:02:17] <Andrew> lol
[09:02:33] <Andrew> works? nice
[09:02:34] <luk3yx> Oh sorry
[09:02:36] <luk3yx> Hehe
[09:02:38] <luk3yx> I couped it
[09:02:40] <Andrew> xD
[09:02:45] <luk3yx> It auto conencted me to Libera
[09:02:49] <luk3yx> *auto connected
[09:02:58] <luk3yx> Ooh files
[09:03:14] <luk3yx> Andrew: https://convos.andrewyu.org/register?email=andrew%40andrewyu.org&exp=1648969389&token=14373e00f15ed32a6307d0a85285d12f5106ea9b
[09:03:27] <Andrew> thx
[09:03:31] <luk3yx> Or do I have to delete my account somehow
[09:03:43] <Andrew> gimme a sec
[09:03:46] <Andrew> i dont think so
[09:04:03] <Andrew> ...
[09:04:03] <luk3yx> Oh sorry
[09:04:11] <luk3yx> I didn't realise opening a new panel switched you to it
[09:04:12] <Andrew> It was just part of the password
[09:04:30] <Andrew> anyways, my new password contains the old leaked one
[09:04:32] <Andrew> so you already know that
[09:05:16] <Andrew> oh you edited the configs already?
[09:05:20] <luk3yx> Indeed
[09:05:23] <luk3yx> That's how I managed to log in
[09:05:24] <Andrew> THANKS
[09:05:26] <Andrew> *thanks
[09:05:30] <luk3yx> YOU'RE WELCOME
[09:05:55] <Andrew> Rule 1: Never use 'su' when luk is on your tmux
[09:06:08] *** Joins: luk (convos@andrewyu.org)
[09:06:23] <luk> Yay
[09:06:23] <lurk> ​Yay!
[09:06:24] <Andrew> people say it looks like discard
[09:06:26] <Andrew> is that true
[09:06:35] <luk> https://convos.andrewyu.org/file/1/fZu4uKk4Dwf0bw1z
[09:06:37] <Andrew> also, convos has good ircv3 support
[09:06:45] <Andrew> so t's not that good of an idea to use it on solanum
[09:08:33] <luk> https://meet.jit.si/%23libreirc%20-%20andrewyu
[09:08:43] <luk> Ooh
[09:08:44] <luk> Video chat
[09:08:55] <luk> Well I don't have my microphone or video on
[09:08:59] <luk> But it supports it
[09:08:59] <Andrew> lol
[09:09:02] <Andrew> what the
[09:09:13] <Andrew> luk: I wasn't able to host my own Jitsi because of random issues
[09:09:29] <luk> @everyone
[09:09:34] <Andrew> ?
[09:09:37] <luk> Doesn't work
[09:10:06] *** Joins: NotAndrew (convos@andrewyu.org)
[09:10:08] <Andrew> lol oh
[09:10:38] <NotAndrew> Nothing is on my mind
[09:10:44] <luk> I gave you privs
[09:10:48] <Andrew> Thanks :)
[09:10:52] *** Andrew sets mode: +oo luk NotAndrew
[09:10:56] <Andrew> -sanick luk NotLuke
[09:10:57] *** luk is now known as NotLuke
[09:11:04] <NotLuke> It's a shame it gives Andrew the robot privs and not @lurk
[09:11:21] <Andrew> ?
[09:11:28] <NotLuke> s/privs/icon/
[09:11:49] <Andrew> what-?
[09:12:16] <NotLuke> Hold on I'm in the middle of uploading a file
[09:12:25] <NotLuke> I'll send a screenshot once that's finished
[09:12:35] <NotLuke> https://convos.andrewyu.org/file/1/r1YTd5Lu20Z3gxWm
[09:12:41] <NotAndrew> oh
[09:12:43] <NotLuke> Oh that stopped my upload
[09:12:45] <NotAndrew> totally not a rickroll
[09:12:54] <NotAndrew> well, in fact it is not a rickroll
[09:13:28] <NotLuke> I get "request entity too large" if I try and upload a rickroll
[09:13:36] <NotAndrew> Simple
[09:13:41] <NotLuke> Shift+enter is channel search
[09:13:47] <NotAndrew> https://users.andrewyu.org/~luk/rick.mp4
[09:14:12] *** NotLuke sets mode: +i 
[09:14:15] *** NotLuke sets mode: -i 
[09:14:22] <NotLuke> There are mode settings
[09:14:27] *** NotLuke sets mode: +k hunter2
[09:14:38] <Andrew> what?
[09:14:41] *** Andrew sets mode: -k *
[09:14:42] <NotLuke> I can't unset +k, weird
[09:14:43] <NotLuke> Oh
[09:14:49] <Andrew> you need the password to unset k
[09:15:59] <NotLuke> -coup #libreirc
[09:16:08] <luk3yx> -coup #libreirc
[09:16:08] *** Test_User sets mode: -oooo ChanServ lurk werdnA LibreBot
[09:16:08] *** Parts: ChanServ (ChanServ@services.irc.andrewyu.org) ()
[09:16:08] *** Joins: ChanServ (ChanServ@services.irc.andrewyu.org)
[09:16:08] *** services.irc.andrewyu.org sets mode: +o ChanServ
[09:16:08] <Andrew> no
[09:16:09] *** Test_User sets mode: -oooo Hawk James NotLuke NotAndrew
[09:16:14] *** luk3yx sets mode: +oooo werdnA LibreBot Hawk James
[09:16:16] *** luk3yx sets mode: +ooo lurk NotLuke NotAndrew
[09:17:04] <NotLuke> What IRCv3 things does it do
[09:17:09] <NotLuke> I can't reply or react to messages on xeroxIRC
[09:17:51] *** NotLuke is now known as Luke
[09:18:36] <Luke> Test
[09:18:38] * Luke yay
[09:18:41] <Luke> .r
[09:18:41] <lurk> Luke: Click!
[09:18:43] <Luke> .t
[09:18:44] <lurk> Luke: 2022-04-02 07:18:44 UTC
[09:18:45] <Luke> .r
[09:18:45] <lurk> Luke: Click!
[09:18:46] <Luke> .r
[09:18:46] <lurk> Luke: Click!
[09:18:47] <Luke> .t
[09:18:48] <lurk> Luke: 2022-04-02 07:18:48 UTC
[09:18:51] <Luke> It still works?
[09:18:54] <Luke> .t Asia/Shanghai
[09:18:54] <lurk> Luke: 2022-04-02 15:18:54 CST
[09:19:56] <Luke> .ek 🐟 🤔
[09:19:57] <lurk> Luke: 🐟 + 🤔 → https://www.gstatic.com/android/keyboard/emojikitchen/20210831/u1f41f/u1f41f_u1f914.png
[09:20:08] <Luke> It just loads images
[09:20:13] <Luke> I wonder if I could use that to grab people's IPs
[09:20:27] <Andrew> ?
[09:20:42] <Andrew> Does it use an iframe?
[09:20:45] <Luke> When lurk replied with that image URL my browser made a request to gstatic.com
[09:20:59] <Luke> https://example.com/yay.png
[09:21:16] <Luke> No but I don't think that'd make a difference
[09:21:30] <Andrew> I mean
[09:21:33] <Luke> I could send an "image" URL that logs your IP for example
[09:21:39] <Andrew> Is it using iframes or img's in your browser
[09:21:43] <Luke> <img> I think
[09:21:44] <Andrew> or it convos relaying it to you
[09:22:07] <Luke> https://convos.andrewyu.org/file/1/nZyNLYkBVDDsFXHx https://convos.andrewyu.org/file/1/nZyNLYkBVDDsFXHx
[09:22:40] <Andrew> anyways
[09:24:24] <Luke> .t
[09:24:24] <lurk> Luke: 2022-04-02 07:24:24 UTC
[09:24:26] <Luke> Magic
[09:24:40] <Luke> .ek 🥧 🐀
[09:24:41] <lurk> Luke: 🥧 + 🐀 → 🏴‍☠️
[09:25:17] <Andrew> lurk: Erg's IRCv3 support is crazy
[09:25:21] <Luke> Indeed
[09:25:37] <Luke> It doesn't support server linking though
[09:25:40] <Luke> It just has integrated services
[09:25:47] <Andrew> It's not technically an IRC server though, because of no linking
[09:26:19] <Andrew> draft/multiline seems interesting
[09:26:34] <Luke> Indeed, sadly it needs batches and complicated things
[09:26:43] <Luke> .exec
[09:26:43] <lurk> Luke: Permission denied!
[09:26:52] <Luke> .plotd
[09:26:52] <lurk> Luke: Pickup line of the day (from piesquared): Your eyes are blue, like the ocean. And baby, I'm lost at sea.
[09:26:54] <Luke> .f
[09:26:54] <lurk> Luke: Don't get to bragging.
[09:26:56] <Andrew> Luke: explain why Go is a good language
[09:27:00] <Luke> Because Go is yay
[09:27:02] <Luke> It has a cute logo
[09:27:03] <Luke> .gopher
[09:27:03] <lurk> Luke: https://go.dev/blog/gopher/plush.jpg
[09:27:08] <Luke> Excellent coroutine and multithreading support
[09:27:14] <Luke> .gopher
[09:27:14] <lurk> Luke: https://go.dev/blog/gopher/header.jpg
[09:27:34] <Luke> It's a compiled language but it's also garbage collected
[09:27:39] <Andrew> That's nice
[09:27:42] <Luke> And memory safe (if you don't import `unsafe`)
[09:27:48] <Luke> How do I do bold
[09:27:50] <Luke> **Test**
[09:27:52] <Luke> Markdown
[09:27:54] <Luke> *Yay*
[09:27:55] <Luke> ~~Test~~
[09:27:58] <Luke> <del>Test</del>
[09:28:08] <Luke> # Test
[09:28:19] <luk3yx> What
[09:28:27] <luk3yx> It doesn't convert the markdown to/from IRC colour codes
[09:28:38] <luk3yx> Bold Italic underline strikethrough
[09:28:52] <Luke> It supports bold/italic/underline from other clients
[09:29:06] <luk3yx> 3,2Test 0,0Spoiler
[09:29:13] <luk3yx> 1,1Spoiler
[09:29:24] <luk3yx> 01,01Spoiler
[09:29:33] <Luke> Aww
[09:29:44] <Luke> .t
[09:29:45] <lurk> Luke: 2022-04-02 07:29:44 UTC
[09:29:49] <Luke> I am impressed that replit hasn't broken again
[09:29:55] <Andrew> .kill
[09:29:55] * lurk ​slaps Andrew with a frying pan
[09:30:02] * Andrew slaps lurk with a BillyS
[09:31:22] <Luke> Andrew: It doesn't look like Convos supports message-tags
[09:31:50] <Luke> It doesn't seem to request any capabilities by default and when I manually requested message-tags and server-time it died
[09:31:55] <luk3yx> `Monospace test`
[09:32:14] <Luke> ```py
[09:34:56] <Andrew> what the heck
[09:35:04] <Andrew> anyways, reading about ergo-ircd
[09:35:20] <Luke> In Discord ```py starts a code block thing (with Python code)
[09:35:24] <Luke> Not here though
[09:36:18] <Andrew> Anyways, I just heard from random pepole that ErgoIRCd + Convos is introduce-discord-users-into thingy
[09:36:20] <Andrew> I don't get it
[09:36:36] <Luke> https://github.com/convos-chat/convos/issues/444
[09:37:20] <Andrew> Luke: what's extended-join?
[09:38:19] <Luke> It puts the account name and realname into JOIN messages
[09:38:44] <Andrew> weechat and znc have it i suppose
[09:40:00] <luk3yx> I don't like how Firefox doesn't seem to "expire" service workers
[09:40:52] <Andrew> ?
[09:41:01] <Andrew> service worker?
[09:41:10] <luk3yx> https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API
[09:44:12] <Andrew> odd stuff
[09:46:26] <Andrew> luk3yx: Halfops cannot +b?
[09:46:29] <Andrew> I didn't know that
[09:47:45] <luk3yx> They can't?
[09:49:28] <Andrew> luk3yx: At least ergo's cannot
[09:49:32] <Andrew> Try them on Insp?
[09:50:30] <luk3yx> I gave you halfops in #lurk
[09:51:19] <Andrew> uh, I'm not on xIRC right now, and I don't have a web wowser for thelounge rn
[09:51:23] <Andrew> Anyways, tiem to install https://git.causal.agency/pounce
[09:52:00] <Andrew> Designed to work on OpenBSD, hmm
[09:52:33] <luk3yx> I can ban lurk
[09:52:38] <luk3yx> With halfops
[09:53:02] <luk3yx> .t
[09:53:02] <lurk> luk3yx: 2022-04-02 07:53:02 UTC
[09:53:07] <luk3yx> Somehow it hasn't broken yet
[09:53:08] <Andrew> No lubtls
[09:54:41] <Andrew> luk3yx: https://text.causal.agency/010-irc-suite.txt
[10:01:27] <luk3yx> Pounce only does one network per process? I guess that probably makes it simpler
[10:01:55] <luk3yx> I wonder if WeeChat has an option to encrypt IRC logs
[10:02:06] <luk3yx> Maybe I should also figure out secure settings for WeeChat
[10:02:15] <Andrew> pounce does ircv3 much better than znc
[10:04:16] <Andrew> luk3yx: SNI is cool
[10:07:15] <Andrew> luk3yx: the catgirl irc client is interesting
[10:26:17] <Andrew> *very* good
[10:26:58] <luk3yx> .t
[10:26:59] <lurk> luk3yx: 2022-04-02 08:26:59 UTC
[10:27:04] <luk3yx> It still works? Amazinf
[10:27:09] <luk3yx> *Amazing
[10:28:04] <Andrew> lol
[10:28:08] <Andrew> .t luk3yx
[10:28:08] <lurk> Andrew: UnknownTimeZoneError: 'luk3yx'
[10:28:17] <luk3yx> .t NZ
[10:28:18] <lurk> luk3yx: 2022-04-02 21:28:18 NZDT
[10:28:20] <luk3yx> .gettz
[10:28:20] <lurk> luk3yx: Your timezone is 'UTC'.
[10:28:37] <luk3yx> .gettz Andrew
[10:28:38] <lurk> luk3yx: Invalid syntax! This command takes 0 positional arguments but 1 was given.
[10:28:54] <Andrew> .settz Asia/Shanghai
[10:28:54] <lurk> Andrew: Timezone set!
[10:28:57] <Andrew> .gettz Andrew 
[10:28:57] <lurk> Andrew: Invalid syntax! This command takes 0 positional arguments but 1 was given.
[10:29:02] <luk3yx> My hacky error message parsing works
[10:29:04] <Andrew> .gettz
[10:29:04] <lurk> Andrew: Your timezone is 'Asia/Shanghai'.
[10:29:10] <Andrew> .t Andrew 
[10:29:10] <lurk> Andrew: UnknownTimeZoneError: 'Andrew'
[10:29:21] <luk3yx> Just .t
[10:29:41] <luk3yx> .settz NZ
[10:29:42] <lurk> luk3yx: Timezone set!
[10:29:43] <luk3yx> .t
[10:29:43] <lurk> luk3yx: 2022-04-02 21:29:43 NZDT
[10:29:46] <luk3yx> .resettz
[10:29:46] <lurk> luk3yx: Timezone set!
[10:29:50] <luk3yx> .t
[10:29:50] <lurk> luk3yx: 2022-04-02 08:29:50 UTC
[12:11:10] <Andrew> luk3yx: How do I specify where a program should look for .so files?
[13:01:05] *** Joins: andrew_ (~andrew@114.88.181.56)
[13:01:11] *** andrew_ is now known as Catgirl
[13:01:13] <Catgirl> Yay!
[13:01:13] <lurk> ​Yay!
[13:01:15] <Catgirl> Working client
[13:01:46] <Catgirl> Seriously? The color of "Crewmate" is black, which means I can't see it
[13:01:50] <Catgirl> it's the same as my background
[13:01:53] <Catgirl> anyways, good client
[13:02:14] <Catgirl> the channel name is also in black
[13:02:14] <Catgirl> eww
[13:02:18] *** Quits: Catgirl (~andrew@114.88.181.56) (Client Quit)
[13:15:39] <Andrew> hax: tell me when you're there
[16:54:37] <Crewmate> Andrew: never
[16:54:48] <Andrew> Crewmate: No
[16:54:49] <Crewmate> it helps a lot if you actually ping so I can see
[16:54:51] <Crewmate> :P
[16:54:54] <Andrew> k
[16:54:55] *** Crewmate is now known as hax
[16:54:59] <Andrew> -sanick ChanServ hax
[16:55:02] <Andrew> ..
[16:55:06] <hax> -sanick Andrew ChanServ
[16:55:06] *** Quits: ChanServ (ChanServ@services.irc.andrewyu.org) (Killed (irc.andrewyu.org (Nickname regained by services)))
[16:55:06] *** Andrew is now known as ChanServ
[16:55:06] *** Quits: ChanServ (Andrew@LibreIRC/staff/Andrew) (Leaving)
[16:55:23] *** Joins: Andrew (Andrew@LibreIRC/staff/Andrew)
[16:55:23] *** ChanServ sets mode: +o Andrew
[16:55:25] *** Server sets mode: +CMPnt 
[16:55:45] *** Server sets mode: +CMPnt 
[16:55:56] <hax> now uh what do you need me for
[16:56:38] <Andrew> hax: Just someone to talk to and poll for programming issues
[16:56:47] <hax> ah
[16:56:47] <Andrew> Also,
[16:56:50] *** hax is now known as EST
[16:56:53] <Andrew> convos.andrewyu.org
[16:56:54] <EST> .settz CST
[16:56:56] <Andrew> ...
[16:56:58] *** EST is now known as hax
[16:57:00] -lurk- 4Error running command! timeout: The read operation timed out
[16:57:10] *** lurk was kicked by Andrew (Staff disrespect)
[16:57:13] <hax> lol
[16:57:18] *** Joins: lurk (lurk@144.172.70.127)
[16:57:18] *** ChanServ sets mode: +o lurk
[16:57:54] <hax> yes I see a nice javascript is disabled complaint :P
[16:58:05] <Andrew> hax: That's nice
[16:58:14] <Andrew> hax: this is yet another nooby-irc thing
[16:58:22] <hax> lol fair enough
[16:59:16] <Andrew> 22:57 <Andrew> Sadly ergo isn't a real IRC server
[16:59:18] <Andrew> 22:57 <Andrew> as in, the "R" is gone
[16:59:20] <Andrew> 22:58 <val> it is
[16:59:22] <Andrew> 22:58 <Andrew> val: It's not internet "relay" chat
[16:59:24] <Andrew> 22:58 <val> it relays between clients
[16:59:26] <Andrew> 22:58 <Andrew> ...
[16:59:27] <Andrew> hax: The catgirl irc client is based
[16:59:35] <hax> lol
[16:59:40] <hax> Internet Non-relayed Chat
[16:59:44] <hax> INC
[17:01:14] <Andrew> hax: By the way, why do computers like bytes so much?
[17:01:26] <Andrew> Some things are inherently not full-bytes
[17:01:44] <Andrew> Sometimes I want a datatype that stores precisely 7 true/false values
[17:01:47] <hax> Andrew: bc computer designers made them that way
[17:01:59] <Andrew> Well, just that?
[17:02:14] <Andrew> I expect an actual technical reason
[17:02:21] <hax> well being able to use bytes instead of bits gives you 256* the addressible memory
[17:02:36] <hax> which pre-64-bit was definitely a concern
[17:03:58] <hax> also being able to use individual bits of registers would significantly expand the possible instructions, making programs become larger
[17:04:14] <Andrew> makes sense
[17:07:02] <Andrew> hax: I named myself NickServ on WeChat
[17:07:13] <Andrew> Now I'm waiting for passwords from Tapuz
[17:07:17] <hax> -jupe services.irc.andrewyu.org
[17:07:17] *** Quits: ChanServ (ChanServ@services.irc.andrewyu.org) (irc.andrewyu.org services.irc.andrewyu.org)
[17:07:24] *** hax is now known as NickServ
[17:07:27] <NickServ> ;)
[17:07:33] *** NickServ is now known as hax
[17:07:37] <hax> -:1HC SQUIT 010
[17:07:37] *** Joins: ChanServ (ChanServ@services.irc.andrewyu.org)
[17:07:37] *** services.irc.andrewyu.org sets mode: +o ChanServ
[17:10:30] <Andrew> *when hax treats sockets as thread-safe*
[17:10:58] <hax> yes
[17:11:29] <hax> until they act otherwise for me I shall continue to do so for my python programs, as they are not *intended* to be a permanent version
[17:12:29] <Andrew> bad idea
[17:12:46] <hax> aka half the stuff I do ;)
[17:14:23] * Andrew annoys #libera with 00,00perfectly readable colors
[17:14:45] <hax> s/././ - oh wait no sed bot, sad
[17:15:16] <Andrew> ?
[17:15:20] <Andrew> what does that do
[17:15:32] <Andrew> !load sedregex
[17:15:32] <LibreBot> Andrew: The operation succeeded.
[17:15:33] <hax> actually sadly wouldn't work bc the bot would keep the colors
[17:16:02] <Andrew> hax: why? simple bots treat colors as normal text
[17:16:27] <hax> yeah ik
[17:16:31] <Andrew> anyways, sussy impostor time
[17:16:39] <hax> I forgot the color was normal text for a minute
[17:17:55] <Andrew> lol
[17:29:13] <Andrew> hax: Let's ditch numeric reply codes
[17:31:59] <hax> yes
[17:32:25] <Andrew> Saving a few bytes but causing not-easily-understandable protocols
[17:42:32] <Andrew> hax: are there "do while" loops in python
[17:43:03] <hax> yes, type out the while part twice :P
[17:43:11] <Andrew> ll.
[17:43:14] <Andrew> ...
[17:43:20] <hax> actually though I don't think so
[17:43:48] <Andrew> ill use while True; ..; if condition: break
[17:44:34] <hax> yeah
[17:46:20] <Andrew> hax: a problem:
[17:46:29] <Andrew> say that we have a user "A" on server "a"
[17:46:40] <Andrew> and a channel #B on server b
[17:46:55] <Andrew> and users C, D and E from servers c, d and e
[17:47:05] <Andrew> suppose that A wants to join #B
[17:47:15] <Andrew> how should this join message be relayed
[17:47:34] <Andrew> should a connect to b, and then b tells c, d, and e that A joined?
[17:47:48] <Andrew> or should a connect to be, b tell a that a needs to tell c, d and e
[17:47:55] <Andrew> and then a does it themself?
[17:48:49] <Andrew> and what if, i.e., a cannot reach c and e, but can reach b and d?
[17:49:00] <Andrew> We need routing for sure
[17:49:07] <hax> b telling c d and e would be more reasonable
[17:49:15] <Andrew> why?
[17:49:32] <Andrew> maybe that's how it should be for the JOIN part
[17:49:32] <hax> because then a doesn't need to also go and create a connection with the others
[17:49:48] <Andrew> but for messages? b would be overloaded
[17:49:56] <hax> hmm
[17:50:10] <Andrew> ahh, we need persistent connections, each live for a few minutes
[17:50:19] <hax> true but if we don't load one server like that we end up with connection spam
[17:50:25] <Andrew> and then it uses irc routing
[17:50:39] <hax> ye
[17:51:44] <Andrew> hax: there's "dict().keys, dict().remove(value) and del(dict[key]) right?
[17:51:48] <Andrew> s/"//
[17:51:48] <LibreBot> Andrew meant to say: hax: there's dict().keys, dict().remove(value) and del(dict[key]) right?
[17:51:57] <Andrew> !unload sedregex
[17:51:57] <LibreBot> Andrew: The operation succeeded.
[17:53:05] <hax> you can just del dict[key]
[17:53:11] <Andrew> k
[17:53:12] <hax> and for key in dict:
[17:53:22] <Andrew> k
[17:57:10] <Andrew> hax: pip3 install twisted
[18:02:11] <Andrew> hax: if you have a semi-big project and a channel for it
[18:02:15] <Andrew> and someone comes in and says
[18:02:20] <Andrew> Can I ask a question?
[18:02:24] <Andrew> how would you respond
[18:06:51] <hax> sorry but no questions are allowed, and by asking if you can ask a question you have voilated our ToS
[18:07:00] <hax> :P
[18:07:16] <Andrew> lol
[18:19:42] <Andrew> anyways
[18:33:56] <Andrew> hax: I heard that you go to sus amogus university
[18:44:55] <Andrew> hax: is "del self" okay?
[18:46:34] <Andrew> hax: and what should we use as the escape for escaping tabs
[18:47:38] <Andrew> \
[18:56:48] <hax> if you use \ to escape tabs you now also have to escape \ :P
[18:57:17] <hax> so uhh... double tab = 1 real tab?
[18:57:50] <Andrew> i want double tab to be "empty argument"
[18:57:56] <hax> ah true
[18:58:01] <hax> alright \ it is
[19:26:09] <Andrew> hax: pull
[19:26:15] <Andrew> basic arg parsing in bytes finished
[19:26:24] <Andrew> then I'll send it some chinese and watch it die
[19:26:31] <hax> lol
[19:27:05] <Andrew> it doesnt die
[19:27:47] <hax> well ofc, unless chinese has different tabs and \s
[19:28:12] <Andrew> i was talking about single-byte iteraion problems
[19:28:36] <hax> ah true, if the last byte of a chinese character is the same as a tab/etc
[19:29:37] <Andrew> i dont think that's possible
[19:29:58] <hax> .py
[19:30:03] -lurk- 4Error running command! timeout: The read operation timed out
[19:30:05] <hax> .py
[19:30:05] <lurk> hax: (no output)
[19:30:22] <hax> .py '\u2122'
[19:30:22] <lurk> hax: ™
[19:30:31] <hax> .py '\u2122'.encode()
[19:30:31] <lurk> hax: b'\xe2\x84\xa2'
[19:30:36] <hax> hmm yes
[19:30:46] <hax> .py '\u26f'.encode()
[19:30:46] <lurk> hax: SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 0-4: truncated \uXXXX escape (<string>, line 1)
[19:30:49] <Andrew> I'll make an irc wrapper for it
[19:30:50] <hax> .py '\u026f'.encode()
[19:30:51] <lurk> hax: b'\xc9\xaf'
[19:31:05] <Andrew> s/^.*$//
[19:34:24] <Andrew> hax: anyways, exploit the parser
[19:34:31] <Andrew> as in, make it misbehave
[19:34:57] <hax> .c '\x01\x1b0)\x04\x35'
[19:34:58] <lurk> hax: 0)5
[19:35:23] * hax begins putting random stuff in the chat via lur
[19:35:25] <hax> *lurk
[19:35:31] <hax> actually though nah
[19:36:11] <Andrew> \x1b)0, not \x1b0)
[19:36:18] <Andrew> s/)/(/
[19:37:13] <hax> ye
[19:37:56] <hax>         for b in [line[i:i+1] for i in range(len(line))]:
[19:37:57] <hax>             print(b)
[19:37:59] <hax>             print(type(b))
[19:38:01] <Andrew> hax: does bytes have upper()
[19:38:01] <hax>             if escaped:
[19:38:03] <hax>                 if b == b"\\":
[19:38:05] <hax>                     current += b"\\"
[19:38:07] <hax>                 elif b == b"\t":
[19:38:09] <hax>                     current += b"\t"
[19:38:11] <hax>                 else:
[19:38:13] <hax>                     current += b""
[19:38:15] <hax>                 escaped = False
[19:38:17] <Andrew> ?
[19:38:17] <hax>             elif b == b"\\":
[19:38:19] <hax>                 escaped = True
[19:38:21] <hax>             elif b == b"\t":
[19:38:23] <hax>                 args.append(current)
[19:38:25] <hax>                 current = b""
[19:38:27] <hax>             else:
[19:38:29] <hax>                 current += b
[19:38:31] <hax> aaaaa why
[19:38:35] <Andrew> ?
[19:38:36] <Andrew> ?
[19:38:45] <hax> don't parse it byte-per-byte like that
[19:38:50] <hax> use string.split
[19:38:55] <Andrew> "string"
[19:38:59] <hax> er
[19:39:07] <hax> yeah whatever it is
[19:39:10] <Andrew> hax: How do you propose we do that
[19:39:42] <hax> line.split(b"\\\\")
[19:40:03] <Andrew> ??
[19:40:06] <hax> now all escaped ones magically disappear, and you can join them back into a single one later
[19:40:21] <Andrew> Split by tab? bummer, you have to check for each argument if it ends with the escape, then you have to combie a list item and relink the list
[19:40:34] <hax> er wait a sec... what am I saying
[19:40:36] <Andrew> That is a hack
[19:40:48] <hax> but yes it is indeed
[19:41:01] <Andrew> hacks are bad, we can sacrifice performance for correctness
[19:43:08] <Andrew> did i just commit passwords to a public repository
[19:43:22] <hax> good idea
[19:43:46] <Andrew> ?
[19:44:11] <hax> joking
[19:44:17] <Andrew> lol
[19:44:19] <Andrew> check the repo
[19:44:23] <Andrew> config.py
[19:44:28] <hax> lol
[19:45:00] <Andrew> hunter2
[19:45:00] <hax> high quality passwords :P
[19:45:42] <hax> note how the .gitignore on mine specifically contains CoupServConfig.py
[19:45:44] <hax> er
[19:45:46] <hax> .json
[19:45:48] <hax> but ye
[19:46:50] <Andrew> ik
[19:47:05] <Andrew> I intentionally used good passwords
[20:15:20] <Andrew> hax: Go pull 10 minutes later
[20:21:23] <Andrew> hax: pull
[20:21:25] <Andrew> .t nz
[20:21:30] -lurk- 4Error running command! timeout: The read operation timed out
[20:21:31] <Andrew> !tztime nz
[20:21:31] <LibreBot> Andrew: Error: Unknown timezone
[20:22:41] <Andrew> !tztime NZDT
[20:22:41] <LibreBot> Andrew: Error: Unknown timezone
[20:24:05] <Andrew> !tztime Pacific/Auckland
[20:24:05] <LibreBot> Andrew: 2022-04-03T06:24:05+1200
[20:25:35] <hax> .t utc
[20:25:35] <lurk> hax: 2022-04-02 18:25:35 UTC
[20:25:37] <hax> .t z
[20:25:37] <lurk> hax: UnknownTimeZoneError: 'z'
[20:25:49] <Andrew> anyways
[20:25:51] <hax> .gettz lurk
[20:25:51] <lurk> hax: Invalid syntax! This command takes 0 positional arguments but 1 was given.
[20:25:52] <Andrew> pull
[20:26:00] <Andrew> .gettz
[20:26:01] <lurk> Andrew: Your timezone is 'Asia/Shanghai'.
[20:26:03] <Andrew> quite useless
[20:26:05] <Andrew> .time
[20:26:06] <lurk> Andrew: 2022-04-03 02:26:06 CST
[20:26:15] <Andrew> I can't check the time of others
[20:26:19] <Andrew> !list Time
[20:26:19] <LibreBot> Andrew: at, ctime, ddate, elapsed, seconds, time, tztime, and until
[20:26:22] <hax> luk3yx: let .gettz work for others
[20:26:31] <Andrew> otherwise it's quite uselss
[20:26:47] <Andrew> I mean most people[tm] have the time in their status/tmux-bar
[20:27:14] <hax> lol
[20:27:22] <hax> I have my time in 3 places
[20:27:29] <hax> weechat, tmux, and DE
[20:27:37] <hax> s/DE/WM/
[20:30:24] <Andrew> anyways
[20:30:34] <Andrew> hax: I'm writing the multicast part
[20:30:41] <hax> k
[20:30:41] <Andrew> hax: Does the logging in part work?
[20:30:49] <Andrew> (run it and try)
[20:30:56] <Andrew> also try connecting multiple clients to it)
[20:31:53] <hax> PASS works perfectly fine for PASSWORD btw, no need to make it longer than needed
[20:32:36] <Andrew> hmm
[20:32:46] <Andrew> "PASS" is ambiguous
[20:32:52] <Andrew> I'll add an alias
[20:33:00] <Andrew> or, you do that
[20:33:09] <Andrew> be ause I am writing the User object
[20:33:27] <Andrew> Feeling how we inherit from our ancestors and have class conflict
[20:35:27] <hax> what is PASS ambiguous with? it's not like you send a command for them to pass it along to another server
[20:35:32] <Andrew> hax: PASS may mean "You passed SASL"
[20:35:49] <hax> that would be more auth accepted
[20:35:55] <Andrew> I just think that abbreviations should be avoided in the main specs
[20:35:58] <hax> however you want to abbreviate that
[20:36:01] <Andrew> Aliases are good
[20:36:26] <Andrew> REPLY_AUTHENTICATION_ACCEPTED
[20:36:33] <hax> aaaaaaaaaaa
[20:36:50] * Andrew continues writing
[20:37:42] <hax> you definitely can ommit the REPLY_ part of that no matter how you look at it, you're not going to command the server to accept your authentication
[20:38:12] <Andrew> Ah, yes
[20:39:36] <Andrew> hax: your task: write it in latex
[20:40:14] <Andrew> Chat output kust be typeset in the Computer Modern font, Roman style, with microkerning
[20:40:47] <hax> I don't even know latex
[20:41:40] <Andrew> \documentclass{internet}
[20:41:50] <Andrew> \usepackage{haxxory-tcpip}
[20:41:57] <Andrew> \begin{document}
[20:42:10] <Andrew> \loop{}{
[20:42:28] <Andrew> \kill{hax}
[20:42:30] <Andrew> }
[20:42:36] <Andrew> \end{document}
[20:42:47] <Andrew> hax: you'd have a lot of fun typing backslashes
[20:42:54] <hax> lol
[20:43:07] <Andrew> Also, professor Knuth would gice you 20$ if yo ufind a bug in TeX
[20:43:15] <Andrew> (not joking)
[20:43:24] <hax> if it exists there's a bug
[20:43:47] <Andrew> try
[20:43:51] <hax> problem is the info needed for them to give me $20 is worth more than $20
[20:43:53] <hax> ;)
[20:44:16] <Andrew> lol
[20:44:25] <Andrew> hax: monero
[20:44:34] <Andrew> then itd wont be in USD
[20:44:40] <Andrew> but that doesnt matter
[20:59:16] <luk3yx> hax: .settz uses hostnames and not nicknames
[20:59:18] <Andrew> hax: let's ditch modes
[21:00:16] <hax> luk3yx: ah
[21:00:35] <hax> wait so
[21:00:37] <hax> .gettz
[21:00:38] <lurk> hax: Your timezone is 'UTC'.
[21:00:52] <hax> ah yeah hostmask rn
[21:01:01] <Andrew> Let"s ditch mpdes,
[21:01:03] <Andrew> *modes
[21:01:05] <Andrew> as in:
[21:01:17] <Andrew> at least single letter modes are ditched
[21:01:29] <hax> that's not ditching modes
[21:01:33] <hax> that's renaming them
[21:01:43] <Andrew> fine
[21:01:54] <Andrew> but calling them "modes", meh yeah it's ojay
[21:02:20] * Andrew notices that he was writing proprietary software
[21:02:32] <hax> lol
[21:04:06] <Andrew> hax: Timestamps would be required now
[21:04:54] <hax> why
[21:05:48] <Andrew> because the internet is laggy
[21:06:19] <Andrew> wait, what if a user tries to fake a timestamp
[21:06:24] <Andrew> timestamp rules:
[21:06:37] <Andrew> the ts of new messages must be bigger than that of old ones
[21:06:55] <hax> simply don't trust timestamps from users
[21:07:09] <Andrew> why
[21:07:16] <Andrew> No i mean
[21:07:29] <Andrew> of course we dont trust timestamps for JOIN, MODE, etc
[21:07:36] <Andrew> but message timestamps, they'e okay
[21:07:38] <hax> -> don't make a user send a timestamp bc there's no way to verify it's actually accurate
[21:07:51] <hax> simply use the time it arrived
[21:08:27] <hax> works for IRC so I don't see why it wouldn't work for IDC
[21:08:34] <Andrew> (1) this is a federated protocol, lag is high
[21:08:46] <Andrew> (2) servers cannot be trusted either
[21:08:58] <hax> so don't use timestamps at all
[21:09:42] <Andrew> i dont like that, i mean yes the user can fake it, but it's still good info to have
[21:09:53] <hax> it's not really needed
[21:10:06] * Andrew sends a message
[21:10:15] <Andrew> *hax gets it 5 seconds later*
[21:10:18] * hax receives it in a readable order
[21:10:39] <Andrew> hmm, but when multi-user chats come in the way
[21:10:42] <hax> would be annoying having messages appear before the current one
[21:10:45] <Andrew> HOW DO YOU DO FUCKING ROUTING
[21:10:57] <hax> 2 ways
[21:11:09] <hax> irc-like but with untrustable servers so don't do that
[21:11:23] <hax> or connect directly to the destination server and send it
[21:12:27] <Andrew> https://about.psyc.eu/Multicast
[21:12:54] <hax> yes it will definitely cause connection spam
[21:13:14] <hax> and if the user is in enough channels with enough other people you might run out of ports :P
[21:14:43] <hax> bc tcp doesn't allow both ends to have multiple connections, right?
[21:15:05] <Andrew> yes
[21:15:13] <Andrew> but (1) we dont have to keep the connection open
[21:15:24] <Andrew> (2) we can use existing established routes
[21:15:38] <hax> so now you have to spam new connections when a message gets sent
[21:16:02] <hax> option 3) use udp bc it's flexible
[21:16:08] <Andrew> ... and when federated, that requires cryptographic signatures by the originating server so the middle servers cannot impersonate
[21:16:13] <hax> or whatever option # we're at rn
[21:16:15] <Andrew> I am considering UDP
[21:16:31] <Andrew> Problem: reliable packets
[21:16:37] <hax> doable
[21:16:40] <Andrew> Let's use the Minetest protocol
[21:16:46] * hax screams
[21:17:01] <Andrew> We should read the multicasting page first
[21:18:11] <Andrew> <Shoraneth> like ... if I have 15 buddies on jabber.org whom I need to notify of my presence, my server would instead send only one notification to the server and let the receiving server notify the other users, rather than me notify each one individually?
[21:18:13] <Andrew> <lynX> not just that, that's what we call "smart unicast." It's better than sending a copy to each recipient like XMPP does, but we want more. What we are talking about when using the word multicast works like this: you live in Austria and have 15 buddies in Australia (on several servers, because we like decentralization). Multicast only sends one notification down under, and a
[21:18:15] <Andrew> router down there (like a trustworthy buddy or server) distributes a copy to all involved servers which then create copies of the messages for each recipient connected to them. That's multicasting in essence, but it can get a lot more complicated than that.
[21:18:17] <Andrew> <coyo> So, GeoIP + Trust + Latency as the routing metrics? sounds awesome, actually. very doable.
[21:18:42] <hax> no I don't mean per-user
[21:18:45] <hax> I mean per-server
[21:18:50] <hax> still doesn't solve stuff
[21:19:15] <Andrew> read the second and third message
[21:19:49] <hax> sounds like a pain
[21:20:23] <hax> I don't really want to have to do an IP location lookup of every server connecting simply so I can tell where to send stuff
[21:20:31] <hax> also it requires a trustable middle server
[21:20:44] <hax> and does nothing to reduce latency, if anything it adds latency
[21:20:55] <Andrew> (1) 
[21:21:05] <Andrew> idc about latency rn, get routing done first
[21:21:15] <Andrew> main point here is reducing ports and traffic
[21:21:25] <hax> routing - source server sends to all receiving servers
[21:21:27] <Andrew> lets take a step back and look at irc
[21:21:41] <Andrew> hax: First problem with that kind of routing:
[21:21:51] <hax> idc whether it's 10 sent across the atlantic or 1 sent across the atlancic then 9 more send on that end
[21:22:19] <Andrew> (1) xmpp.northkorea can't send to xmpp.andrewyu.org
[21:22:38] <Andrew>     but it can send to xmpp.andrewyu.cn (if it exists)
[21:22:40] <hax> bc government restrictions?
[21:22:44] <Andrew> s/xmpp/idc/
[21:22:53] <Andrew> government, generally bad I
[21:22:56] <Andrew>  P routes
[21:22:57] <Andrew> etc
[21:23:11] <hax> then they should connect their client to a server outside their restricting country
[21:23:25] <Andrew> ...
[21:23:50] <Andrew> Ok and with the case where there's a firewall by th receiving server
[21:24:03] <hax> then that's just dumb
[21:24:05] <Andrew> or the receiving server just had bad routes with the sending one
[21:24:25] <Andrew> which, believe it or not, absolutely happens
[21:24:39] <hax> bad routes? I don't see how sending a message to a central server which then sends it to a destination is any better
[21:25:00] <Andrew> you have already-established connections
[21:25:02] <hax> it would simply force a route that would with any saneity take more time
[21:25:03] <Andrew> anyways...
[21:25:09] <hax> udp
[21:25:10] <Andrew> hax: No, no, no
[21:25:16] <Andrew> udp is on the list
[21:25:18] <Andrew> but wait
[21:25:30] <Andrew> lets take a step back and ooo at how irc does it
[21:25:36] <Andrew> luk3yx: Join our discussion :)
[21:25:44] <Andrew> basically
[21:25:47] <hax> irc does it in a non-federated way, and trusts intermediate servers
[21:25:54] <Andrew> i know i know
[21:26:02] <hax> as such, it does not fit IDC
[21:26:04] <Andrew> the imtermediate trust issue is
[21:26:14] <Andrew> is problematic, because you can drop messages
[21:26:21] <Andrew> but you cannot impersonate servers
[21:26:27] <Andrew> because cryptography
[21:26:38] <hax> hm
[21:26:44] <hax> true
[21:26:45] <Andrew> the whole network knows the state of the netmap on irc
[21:26:59] <hax> but a rougue server censoring messages is also a problem
[21:27:30] <Andrew> require message echos signed by the destination server
[21:27:42] <Andrew> with the hash of the first message
[21:27:51] <Andrew> ok, now I need to stop making stupid implementations
[21:28:01] <hax> lol
[21:28:13] <hax> yeah now you're increasing the load way past simply making direct connections
[21:28:16] <Andrew> and start writing text ciles
[21:28:31] <Andrew> anyways, UDP is the way to go
[21:28:34] <hax> yes
[21:29:25] <Andrew> so how do you propose reliable packets
[21:29:51] <hax> not entirely sure
[21:29:59] <hax> maybe look at how tcp works lol
[21:30:06] <Andrew> totally going to read minetest
[21:30:23] <hax> simplified minetest protocol *might* not be too bad
[21:30:31] <Andrew> hax: MoSH
[21:30:37] <hax> ?
[21:30:47] <Andrew> mosh protocol
[21:32:39] <Andrew> hax: lol Unlike SSH, mosh's UDP-based protocol handles packet loss gracefully, and sets the frame rate based on network conditions. Mosh doesn't fill up network buffers, so Control-C always works to halt a runaway process.
[21:32:51] <Andrew> "so SIGINT always works to halt a runaway process"
[21:32:54] <hax> XD
[21:32:57] <Andrew> nuh-uh, you zombie procs
[21:33:06] <Andrew> not even sigkill can help
[21:33:09] <hax> yep
[21:33:58] <Andrew> udp is a ... big change in plans
[21:34:05] <hax> but a good change
[21:34:49] <hax> I find tcp's limits to be quite annoying
[21:35:12] <Andrew> ye
[21:35:14] <luk3yx> UDP sounds like a lot of work
[21:35:16] <Andrew> .c 65535/8
[21:35:17] <lurk> Andrew: 8191.875
[21:35:23] <luk3yx> Why not start off with TCP and switch to UDP later once it works
[21:35:31] <Andrew> 8192 bytes per datagram?
[21:35:39] <hax> bc by then we would have had tcp written into it
[21:35:41] <Andrew> luk3yx: Correctness
[21:35:47] <hax> Andrew: why not just 65536?
[21:36:05] <hax> though actually better question
[21:36:09] <Andrew> typo
[21:36:14] <Andrew> ohh its 65536 bytes
[21:36:18] <Andrew> thats better
[21:36:19] <hax> why does minetest use 512 byte udp limits
[21:36:34] <Andrew> idk
[21:36:35] <luk3yx> https://stackoverflow.com/a/35697810
[21:36:44] <luk3yx> > The maximum safe UDP payload is 508 bytes. This is a packet size of 576 (the "minimum maximum reassembly buffer size"), minus the maximum 60-byte IP header and the 8-byte UDP header.
[21:36:45] <Andrew> 65535-1-20-8
[21:36:51] <luk3yx> > Any UDP payload this size or smaller is guaranteed to be deliverable over IP (though not guaranteed to be delivered). Anything larger is allowed to be outright dropped by any router for any reason. Except on an IPv6-only route, where the maximum payload is 1,212 bytes. As others have mentioned, additional protocol headers could be added in some circumstances. A more conservative
[21:36:52] <Andrew> .c 65535-1-20-8
[21:36:53] <lurk> Andrew: 65506
[21:36:53] <luk3yx> value of around 300-400 bytes may be preferred instead.
[21:37:03] <hax> 508...
[21:37:04] <hax> hm
[21:37:11] <luk3yx> Why not just use TCP
[21:37:27] <Andrew> luk3yx: Have fun handling 65535 outgoing tcp connections
[21:37:34] <hax> bc connection spam is going to happen
[21:38:04] <Andrew> luk3yx: Sounds like an IP MTU issue
[21:38:29] <Andrew> udp uses crc? dumb
[21:38:58] <hax> Andrew: unless you want to make a new protocol for everyone's OS to support as well...
[21:40:25] <Andrew> a bit hard
[21:40:30] <hax> yeah exactly
[21:40:45] <hax> I just accept UDP as the "least bad" option
[21:41:15] <Andrew> let's make a weapper library, so we can swap out the internet part of things
[21:41:47] <hax> fun fact, udp can actually send back connection refused messages, but unless you connect(socket), the OS doesn't tell you about it
[21:42:19] <Andrew> lol
[21:42:24] <hax> hmm yes, let's add a wrapper so we can write with tcp now and then end up with extra calls to the wrapper when we switch to udp for less efficency
[21:42:27] <Andrew> very useful
[21:42:38] <hax> well connecting a udp socket is useful for clients actually
[21:42:58] <Andrew> hmm
[21:43:04] <hax> you no longer have to specify a destination address, nor do you receive messages from other servers to that same port
[21:43:13] <Andrew> let's see how reliable udp is in netcat
[21:43:20] <hax> depends on whose network
[21:43:29] <Andrew> *mine*
[21:43:39] <Andrew> totally a nigntmare
[21:43:50] <hax> I do know one guy who has broken udp on their lan, but overall it seems to work for people
[21:45:12] <Andrew> now, why do people say udp  can go through NATs in a way tcp canno
[21:45:56] <hax> bc you can sneak udp connections through some of them
[21:45:59] <hax> mine included
[21:46:15] <hax> others my tricks don't work so well on though
[21:46:31] <Andrew> ?
[21:47:05] <hax> namely, send udp message to some server, get external port; send message from somewhere else to that port and it goes through
[21:47:32] <hax> l
[21:47:37] <hax> s/l//
[21:48:45] <Andrew> hax: https://github.com/skywind3000/kcp
[21:48:52] <Andrew> oh, haxxories
[21:49:06] <Andrew> well, in chinese
[21:49:26] <Andrew> oh there is readme.en
[21:49:44] * hax disappears for a little
[21:51:03] <Andrew> /away disappeared from humanity
[21:51:45] <hax> fixed
[21:52:07] <Andrew> lol
[21:54:33] <Andrew> luk3yx: hi
[21:54:54] <Andrew> hax: should client connections be hdp too?
[21:55:05] <Andrew> (haxxory data protocol)
[21:55:34] <Andrew> anyways, goodnight
